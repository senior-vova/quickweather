{"version":3,"sources":["hocs/MainAppHOC.tsx","reportWebVitals.ts","api/weather.api.ts","store/weather.reducer.ts","store/store.ts","store/weather.selectors.ts","assets/MorningRain.gif","assets/NightRain.gif","assets/Rain1.gif","assets/Fog.gif","assets/Fog1.gif","assets/Fog2.gif","utils/gifs.ts","assets/Snow.gif","assets/Snow2.gif","assets/Snow3.gif","assets/Cloudy.gif","assets/ClearSky.gif","components/Home.tsx","components/SearchForm.tsx","components/SearchByCityComponent.tsx","components/main.tsx","index.tsx"],"names":["Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","apiKey","API","GetWeatherByCity","city","a","axios","get","GetWeatherByPos","lat","lon","GetWeatherByPos2","initialState","weather","weatherDays","error","errorDays","actions","type","msg","reducers","combineReducers","state","action","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","getWeather","getWeatherDays","getError","getErrorDays","GIFs","fog","Fog","Fog1","Fog2","rain","Rain","morningRain","nightRain","snow","mist","clouds","clear","Home","useSelector","useState","index","setIndex","todayGIF","setTodayGif","tomorrowGIF","setTomorrowGif","ATDGIF","setATDGif","useEffect","SetBG","today","name","atd","nameLC","toLowerCase","parseInt","Math","random","length","toFixed","Carousel","activeIndex","className","onSelect","i","controls","indicators","touch","Item","Image","src","draggable","alt","Caption","Nav","to","degree","tomorrow","SearchForm","props","initialValues","cityName","onSubmit","values","setSubmitting","submitForm","isSubmitting","placeholder","Button","disabled","SBC","dispatch","useDispatch","bgGIF","setBgGif","initialized","setInitialized","navigator","geolocation","getCurrentPosition","pos","coords","latitude","longitude","resp","data","status","message","obj","ceil","main","temp","country","sys","err","console","log","fluid","cod","MainAppHOC","timezone","split","current","daily","min","max","exact","path","render","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.31729001.chunk.js","sourcesContent":["import React from \"react\";\r\nimport store from \"../store/store\";\r\nimport {Provider} from \"react-redux\";\r\nimport {HashRouter} from \"react-router-dom\";\r\n\r\nexport const MainAppHOC = (Component: React.FC) => (props: any) => {\r\n    return (\r\n        <HashRouter>\r\n            <Provider store={store}>\r\n                <Component {...props}/>\r\n            </Provider>\r\n        </HashRouter>\r\n    )\r\n};","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import axios from \"axios\";\r\n\r\nconst apiKey: string = `0a494230a7296285ed456b380ec63553`;\r\n\r\nexport const API = {\r\n    GetWeatherByCity: async (city: string) => {\r\n        try {\r\n            return await axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}`);\r\n        } catch (e) {\r\n            return e;\r\n        }\r\n    },\r\n    GetWeatherByPos: async (lat: number, lon: number) => {\r\n        try {\r\n            return await axios.get(`https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&appid=${apiKey}`);\r\n        } catch (e) {\r\n            return e;\r\n        }\r\n    },\r\n    GetWeatherByPos2: async (lat: number, lon: number) => {\r\n        try {\r\n            return await axios.get(`https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&exclude=minutely,hourly,alerts&appid=${apiKey}`);\r\n        } catch (e) {\r\n            return e;\r\n        }\r\n    }\r\n};","import {StateType, ActionType, IWeather, IWeatherDays} from \"./weather.interfaces\";\r\nimport {API} from \"../api/weather.api\";\r\nimport {Dispatch} from \"redux\";\r\n\r\nconst initialState: StateType = {\r\n    weather: null,\r\n    weatherDays: null,\r\n    error: null,\r\n    errorDays: null,\r\n};\r\ntype InitialState = typeof initialState;\r\n\r\nexport const weatherReducer = (state: StateType = initialState, action: ActionType): InitialState => {\r\n    switch (action.type) {\r\n        case \"SET_WEATHER\":\r\n            return {\r\n                ...state,\r\n                weather: action.weather,\r\n            };\r\n        case \"SET_WEATHER_DAYS\":\r\n            return {\r\n                ...state,\r\n                weatherDays: action.weatherDays,\r\n            };\r\n        case \"SET_ERROR\":\r\n            return {\r\n                ...initialState,\r\n                error: action.msg,\r\n            };\r\n        default:\r\n            return {\r\n                ...state,\r\n            }\r\n    }\r\n};\r\nexport const actions = {\r\n    setWeather: (weather: IWeather | null) => ({type: \"SET_WEATHER\", weather}),\r\n    setWeatherDays: (weatherDays: IWeatherDays | null) => ({type: \"SET_WEATHER_DAYS\", weatherDays}),\r\n    setError: (msg: string | null) => ({type: \"SET_ERROR\", msg})\r\n};\r\n\r\nexport const SetWeather = (city: string) => async (dispatch: Dispatch<any>) => {\r\n    const resp = await API.GetWeatherByCity(city);\r\n    if (typeof resp !== \"string\" && resp.data) {\r\n        if (resp.data.cod !== 200) {\r\n            dispatch(actions.setError(resp.data.message));\r\n        } else {\r\n            const obj = {\r\n                city: resp.data.name,\r\n                degree: parseInt(Math.ceil(resp.data.main.temp - 273.15).toFixed(0)),\r\n                name: resp.data.weather[0].main,\r\n                country: resp.data.sys.country,\r\n            };\r\n            dispatch(actions.setWeather(obj));\r\n        }\r\n    } else {\r\n        dispatch(actions.setError(\"City not found\"));\r\n    }\r\n};\r\n\r\nexport const SetWeatherByPos = (lat: number, lon: number) => async (dispatch: Dispatch<any>) => {\r\n    const resp = await API.GetWeatherByPos(lat, lon);\r\n    if (typeof resp !== \"string\" && resp.data) {\r\n        if (resp.status !== 200) {\r\n            dispatch(actions.setError(resp.data.message));\r\n        } else {\r\n            const obj = {\r\n                city: resp.data.name,\r\n                degree: parseInt(Math.ceil(resp.data.main.temp - 273.15).toFixed(0)),\r\n                name: resp.data.weather[0].main,\r\n                country: resp.data.sys.country,\r\n            };\r\n            dispatch(actions.setWeather(obj));\r\n        }\r\n    } else {\r\n        dispatch(actions.setError(\"Server error\"));\r\n    }\r\n};\r\n\r\nexport const SetWeatherDays = (lat: number, lon: number) => async (dispatch: Dispatch<any>) => {\r\n    const resp = await API.GetWeatherByPos2(lat, lon);\r\n    if (typeof resp !== \"string\" && resp.data) {\r\n        if (resp.status !== 200) {\r\n            dispatch(actions.setError(resp.data.message));\r\n        } else {\r\n            const today = {\r\n                city: resp.data.timezone.split('/')[1],\r\n                degree: +(Math.ceil(resp.data.current.temp - 273.15).toFixed(0)),\r\n                name: resp.data.current.weather[0].main,\r\n            };\r\n            const tomorrow = {\r\n                city: resp.data.timezone.split('/')[1],\r\n                name: resp.data.daily[0].weather[0].main,\r\n                degree: +(Math.ceil((+((resp.data.daily[0].temp.min + resp.data.daily[0].temp.max) / 2).toFixed(2)) - 273.15).toFixed(0)),\r\n            };\r\n            const atd = {\r\n                city: resp.data.timezone.split('/')[1],\r\n                name: resp.data.daily[1].weather[0].main,\r\n                degree: +(Math.ceil((+((resp.data.daily[1].temp.min + resp.data.daily[1].temp.max) / 2).toFixed(2)) - 273.15).toFixed(0)),\r\n            };\r\n            dispatch(actions.setWeatherDays({today: today, tomorrow: tomorrow, atd: atd}));\r\n        }\r\n    } else {\r\n        dispatch(actions.setError(\"Server error\"));\r\n    }\r\n};\r\n\r\n\r\n","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport {weatherReducer} from \"./weather.reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    weather: weatherReducer,\r\n});\r\n\r\ntype RootReducerType = typeof reducers;\r\nexport type AppStateType = ReturnType<RootReducerType>;\r\n\r\n// @ts-ignore\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\nexport default store;\r\n","import {AppStateType} from \"./store\";\r\n\r\nexport const getWeather = (state: AppStateType) => state.weather.weather;\r\nexport const getWeatherDays = (state: AppStateType) => state.weather.weatherDays;\r\nexport const getError = (state: AppStateType) => state.weather.error;\r\nexport const getErrorDays = (state: AppStateType) => state.weather.errorDays;","export default __webpack_public_path__ + \"static/media/MorningRain.b36af12a.gif\";","export default __webpack_public_path__ + \"static/media/NightRain.31d7ca51.gif\";","export default __webpack_public_path__ + \"static/media/Rain1.f9ea0cd0.gif\";","export default __webpack_public_path__ + \"static/media/Fog.1c17f57d.gif\";","export default __webpack_public_path__ + \"static/media/Fog1.9664d045.gif\";","export default __webpack_public_path__ + \"static/media/Fog2.4858f1f2.gif\";","import morningRain from '../assets/MorningRain.gif';\r\nimport nightRain from '../assets/NightRain.gif';\r\nimport Rain from '../assets/Rain1.gif';\r\nimport Fog from '../assets/Fog.gif';\r\nimport Fog1 from '../assets/Fog1.gif';\r\nimport Fog2 from '../assets/Fog2.gif';\r\nimport Snow from '../assets/Snow.gif';\r\nimport Snow2 from '../assets/Snow2.gif';\r\nimport Snow3 from '../assets/Snow3.gif';\r\nimport Cloudy from '../assets/Cloudy.gif';\r\nimport ClearSky from '../assets/ClearSky.gif';\r\n\r\nconst fog: Array<any> = [Fog, Fog1, Fog2];\r\nconst mist: Array<any> = [Fog, Fog1, Fog2];\r\nconst rain: Array<any> = [Rain, morningRain, nightRain];\r\nconst snow: Array<any> = [Snow, Snow2, Snow3];\r\nconst clouds: Array<any> = [Cloudy];\r\nconst clear: Array<any> = [ClearSky];\r\n\r\nexport const GIFs = {\r\n    fog,\r\n    rain,\r\n    snow,\r\n    mist,\r\n    clouds,\r\n    clear\r\n};\r\n","export default __webpack_public_path__ + \"static/media/Snow.86f55958.gif\";","export default __webpack_public_path__ + \"static/media/Snow2.16abfe11.gif\";","export default __webpack_public_path__ + \"static/media/Snow3.99d4365e.gif\";","export default __webpack_public_path__ + \"static/media/Cloudy.cf326fcc.gif\";","export default __webpack_public_path__ + \"static/media/ClearSky.613bda1e.gif\";","import React, {FC, useEffect, useState} from \"react\";\r\nimport {Carousel, Image, Nav} from \"react-bootstrap\";\r\nimport \"./home.sass\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {getErrorDays, getWeatherDays} from \"../store/weather.selectors\";\r\nimport {GIFs} from \"../utils/gifs\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nexport const Home: FC<{}> = () => {\r\n    const weatherDays = useSelector(getWeatherDays);\r\n    const errorDays = useSelector(getErrorDays);\r\n    const [index, setIndex] = useState<number>(0);\r\n    const [todayGIF, setTodayGif] = useState<string>(\"\");\r\n    const [tomorrowGIF, setTomorrowGif] = useState<string>(\"\");\r\n    const [ATDGIF, setATDGif] = useState<string>(\"\");\r\n    useEffect(() => {\r\n        if (weatherDays) {\r\n            setTodayGif(SetBG(weatherDays.today.name));\r\n            setTomorrowGif(SetBG(weatherDays.today.name));\r\n            setATDGif(SetBG(weatherDays.atd.name));\r\n            setIndex(0);\r\n        }\r\n        //eslint-disable-next-line\r\n    }, [weatherDays]);\r\n    const SetBG = (name: string) => {\r\n        const nameLC = name.toLowerCase();\r\n        //@ts-ignore\r\n        const index = parseInt((Math.random() * (GIFs[nameLC].length - 1)).toFixed(0));\r\n        //@ts-ignore\r\n        return GIFs[nameLC][index];\r\n    };\r\n    return <>\r\n        {weatherDays\r\n            ? <Carousel activeIndex={index} className={'h-100'} onSelect={(i: number) => {\r\n                setIndex(i);\r\n            }} controls={!!weatherDays} indicators={!!weatherDays} touch={true}>\r\n                <Carousel.Item>\r\n                    <Image\r\n                        className=\"d-block w-100 h-100\"\r\n                        src={todayGIF}\r\n                        draggable={false}\r\n                        alt=\"image\"\r\n                    />\r\n                    <Carousel.Caption className={'p-0'}>\r\n                        <div\r\n                            className={'container content d-flex flex-column justify-content-center align-items-center'}>\r\n                            <h1 className={\"text-primary\"}>Quick Weather</h1>\r\n                            <Nav className={'mt-2'}>\r\n                                <Nav.Item>\r\n                                    <NavLink to={'/city'}>Search By City</NavLink>\r\n                                </Nav.Item>\r\n                            </Nav>\r\n                            {weatherDays\r\n                                ? <div\r\n                                    className={\"city d-flex flex-column justify-content-center align-items-center mt-3\"}>\r\n                                    <h1 className={\"text-primary\"}>{weatherDays.today.city}</h1>\r\n                                    <h2 className={\"text-primary\"}>{weatherDays.today.name}</h2>\r\n                                    <h2 className={\"text-primary\"}>{weatherDays.today.degree}&deg;C\r\n                                        / {((weatherDays.today.degree * 9 / 5) + 32).toFixed(0)}&deg;F</h2>\r\n                                    <h2 className={\"text-primary mt-3\"}>Today</h2>\r\n                                </div>\r\n                                : errorDays\r\n                                    ? <h2 className={\"text-danger mt-3\"}>{errorDays}</h2>\r\n                                    : <h2 className={\"text-danger mt-3\"}>Enter city to find out the weather</h2>\r\n                            }\r\n                        </div>\r\n                    </Carousel.Caption>\r\n                </Carousel.Item>\r\n                <Carousel.Item>\r\n                    <Image\r\n                        className=\"d-block w-100 h-100\"\r\n                        src={tomorrowGIF}\r\n                        draggable={false}\r\n                        alt=\"image\"\r\n                    />\r\n                    <Carousel.Caption className={'p-0'}>\r\n                        <div\r\n                            className={'container content d-flex flex-column justify-content-center align-items-center'}>\r\n                            <h1 className={\"text-primary\"}>Quick Weather</h1>\r\n                            <Nav className={'mt-2'}>\r\n                                <Nav.Item>\r\n                                    <NavLink to={'/city'}>Search By City</NavLink>\r\n                                </Nav.Item>\r\n                            </Nav>\r\n                            {weatherDays\r\n                                ? <div\r\n                                    className={\"city d-flex flex-column justify-content-center align-items-center mt-3\"}>\r\n                                    <h1 className={\"text-primary\"}>{weatherDays.tomorrow.city}</h1>\r\n                                    <h2 className={\"text-primary\"}>{weatherDays.tomorrow.name}</h2>\r\n                                    <h2 className={\"text-primary\"}>{weatherDays.tomorrow.degree}&deg;C\r\n                                        / {((weatherDays.tomorrow.degree * 9 / 5) + 32).toFixed(0)}&deg;F</h2>\r\n                                    <h2 className={\"text-primary mt-3\"}>Tomorrow</h2>\r\n                                </div>\r\n                                : errorDays\r\n                                    ? <h2 className={\"text-danger mt-3\"}>{errorDays}</h2>\r\n                                    : <h2 className={\"text-danger mt-3\"}>Enter city to find out the weather</h2>\r\n                            }\r\n                        </div>\r\n                    </Carousel.Caption>\r\n                </Carousel.Item>\r\n                <Carousel.Item>\r\n                    <Image\r\n                        className=\"d-block w-100 h-100\"\r\n                        src={ATDGIF}\r\n                        draggable={false}\r\n                        alt=\"image\"\r\n                    />\r\n                    <Carousel.Caption className={'p-0'}>\r\n                        <div\r\n                            className={'container content d-flex flex-column justify-content-center align-items-center'}>\r\n                            <h1 className={\"text-primary\"}>Quick Weather</h1>\r\n                            <Nav className={'mt-2'}>\r\n                                <Nav.Item>\r\n                                    <NavLink to={'/city'}>Search By City</NavLink>\r\n                                </Nav.Item>\r\n                            </Nav>\r\n                            {weatherDays\r\n                                ? <div\r\n                                    className={\"city d-flex flex-column justify-content-center align-items-center mt-3\"}>\r\n                                    <h1 className={\"text-primary\"}>{weatherDays.atd.city}</h1>\r\n                                    <h2 className={\"text-primary\"}>{weatherDays.atd.name}</h2>\r\n                                    <h2 className={\"text-primary\"}>{weatherDays.atd.degree}&deg;C\r\n                                        / {((weatherDays.atd.degree * 9 / 5) + 32).toFixed(0)}&deg;F</h2>\r\n                                    <h2 className={\"text-primary mt-3\"}>Day After Tomorrow</h2>\r\n                                </div>\r\n                                : errorDays\r\n                                    ? <h2 className={\"text-danger mt-3\"}>{errorDays}</h2>\r\n                                    : <h2 className={\"text-danger mt-3\"}>Enter city to find out the weather</h2>\r\n                            }\r\n                        </div>\r\n                    </Carousel.Caption>\r\n                </Carousel.Item>\r\n            </Carousel>\r\n            : <p>Empty </p>\r\n        }\r\n    </>\r\n};","import React, {FC} from \"react\";\r\nimport {Formik, Form, Field} from \"formik\";\r\nimport {Button} from \"react-bootstrap\";\r\n\r\ntype Props = {\r\n    submitForm: (cityName: string) => void\r\n}\r\nconst SearchForm: FC<Props> = (props: Props) => {\r\n    const submitForm = (values: any, actions: any) => {\r\n        if (!values.cityName) actions.setSubmitting(false);\r\n        props.submitForm(values.cityName);\r\n        actions.setSubmitting(false);\r\n    };\r\n    return <>\r\n        <Formik initialValues={{cityName: ''}} onSubmit={submitForm}>\r\n            {({isSubmitting}) => (\r\n                <Form className={\"mt-3 d-flex\"}>\r\n                    <Field\r\n                        name=\"cityName\"\r\n                        type={'text'}\r\n                        className={\"form-control text-primary\"}\r\n                        placeholder={\"City Name\"}\r\n                    />\r\n                    <Button className={\"ml-1 \"} type={\"submit\"} disabled={isSubmitting}>GO</Button>\r\n                </Form>\r\n            )}\r\n        </Formik>\r\n    </>\r\n};\r\n\r\nexport default SearchForm;","import React, {FC, useEffect, useState} from \"react\";\r\nimport {Image, Nav} from \"react-bootstrap\";\r\nimport SearchForm from \"./SearchForm\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getError, getWeather} from \"../store/weather.selectors\";\r\nimport {GIFs} from \"../utils/gifs\";\r\nimport {SetWeather, SetWeatherByPos} from \"../store/weather.reducer\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport \"./city.sass\";\r\n\r\nexport const SBC: FC<{}> = () => {\r\n    const dispatch = useDispatch();\r\n    const weather = useSelector(getWeather);\r\n    const error = useSelector(getError);\r\n    const [bgGIF, setBgGif] = useState(\"\");\r\n    const [initialized, setInitialized] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (navigator.geolocation) {\r\n            navigator.geolocation.getCurrentPosition((pos) => {\r\n                dispatch(SetWeatherByPos(pos.coords.latitude, pos.coords.longitude));\r\n            }, (err) => {\r\n                setInitialized(true);\r\n            });\r\n        } else {\r\n            console.log(\"Your browser is not supported Geolocation\");\r\n            setInitialized(true);\r\n        }\r\n        //eslint-disable-next-line\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (weather) {\r\n            SetBG(weather.name);\r\n            setInitialized(true);\r\n        }\r\n    }, [weather]);\r\n    const SetBG = (name: string) => {\r\n        const nameLC = name.toLowerCase();\r\n        //@ts-ignore\r\n        const index = parseInt((Math.random() * (GIFs[nameLC].length - 1)).toFixed(0));\r\n        //@ts-ignore\r\n        setBgGif(GIFs[nameLC][index]);\r\n    };\r\n    const SFSubmit = (cityName: string) => {\r\n        dispatch(SetWeather(cityName));\r\n    };\r\n\r\n    return !initialized\r\n        ? <div className={\"container d-flex justify-content-center align-items-center h-100\"}><h1>Loading...</h1></div>\r\n        : <>\r\n            <div className={'background w-100 h-100 d-flex justify-content-center'}>\r\n                {weather\r\n                    ? <Image src={bgGIF} fluid draggable={\"false\"} alt={\"image\"}/>\r\n                    : <div className={'loading bg-light'}/>\r\n                }\r\n            </div>\r\n            <div className={'container content d-flex flex-column justify-content-center align-items-center'}>\r\n                <h1 className={\"text-primary\"}>Quick Weather</h1>\r\n                <h3 className={\"text-primary\"}>Find out the weather of your city quickly</h3>\r\n                <Nav className={'mt-2'}>\r\n                    <Nav.Item>\r\n                        <NavLink to={'/'}>Home</NavLink>\r\n                    </Nav.Item>\r\n                </Nav>\r\n                <SearchForm submitForm={SFSubmit}/>\r\n                {weather\r\n                    ? <div className={\"city d-flex flex-column justify-content-center align-items-center mt-3\"}>\r\n                        <h1 className={\"text-primary\"}>{weather.city}/{weather.country}</h1>\r\n                        <h2 className={\"text-primary\"}>{weather.name}</h2>\r\n                        <h2 className={\"text-primary\"}>{weather.degree}&deg;C\r\n                            / {((weather.degree * 9 / 5) + 32).toFixed(0)}&deg;F</h2>\r\n                    </div>\r\n                    : error\r\n                        ? <h2 className={\"text-danger mt-3\"}>{error}</h2>\r\n                        : <h2 className={\"text-danger mt-3\"}>Enter city to find out the weather</h2>\r\n                }\r\n            </div>\r\n        </>\r\n};","import React, {useEffect, useState, FC} from \"react\";\r\nimport {MainAppHOC} from \"../hocs/MainAppHOC\";\r\nimport {Redirect, Route, Switch} from \"react-router-dom\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {SetWeatherDays} from \"../store/weather.reducer\";\r\nimport {Home} from './Home';\r\nimport {SBC} from \"./SearchByCityComponent\";\r\n\r\nconst Main: FC = () => {\r\n    const dispatch = useDispatch();\r\n    const [initialized, setInitialized] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (navigator.geolocation) {\r\n            navigator.geolocation.getCurrentPosition((pos) => {\r\n                dispatch(SetWeatherDays(pos.coords.latitude, pos.coords.longitude));\r\n                setInitialized(true);\r\n            }, (err) => {\r\n                setInitialized(true);\r\n            });\r\n        } else {\r\n            setInitialized(true);\r\n            console.log(\"Your browser is not supported Geolocation\");\r\n        }\r\n        //eslint-disable-next-line\r\n    }, []);\r\n\r\n    return !initialized\r\n        ? <div className={\"container d-flex justify-content-center align-items-center h-100\"}><h1>Loading...</h1></div>\r\n        : <>\r\n            <Switch>\r\n                <Route exact path={'/'} render={() => <Home/>}/>\r\n                <Route exact path={'/city'} render={() => <SBC/>}/>\r\n                <Route path={'/'} render={() => <Redirect to={'/'}/>}/>\r\n            </Switch>\r\n        </>\r\n};\r\n\r\nexport default MainAppHOC(Main);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport reportWebVitals from './reportWebVitals';\nimport Main from \"./components/main\";\nimport './index.sass';\n\nReactDOM.render(<Main/>, document.getElementById('root'));\n\nreportWebVitals();\n"],"sourceRoot":""}