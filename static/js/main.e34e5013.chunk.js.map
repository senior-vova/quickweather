{"version":3,"sources":["hocs/MainAppHOC.tsx","reportWebVitals.ts","api/weather.api.ts","store/weather.reducer.ts","store/store.ts","assets/MorningRain.gif","assets/NightRain.gif","assets/Rain1.gif","assets/Fog.gif","assets/Fog1.gif","assets/Fog2.gif","utils/gifs.ts","assets/Snow.gif","assets/Snow2.gif","assets/Snow3.gif","assets/Cloudy.gif","assets/Cloudy1.gif","assets/ClearSky.gif","components/SearchForm.tsx","components/main.tsx","index.tsx"],"names":["Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","apiKey","instance","axios","create","baseURL","headers","API","GetWeatherByCity","city","a","get","GetWeatherByPos","lat","lon","initialState","weather","error","AC","type","obj","msg","reducers","combineReducers","form","formReducer","state","action","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","GIFs","fog","Fog","Fog1","Fog2","rain","Rain","morningRain","nightRain","snow","mist","clouds","clear","Input","props","Form","Control","input","SearchForm","className","onSubmit","handleSubmit","Field","name","placeholder","component","Button","SearchReduxForm","reduxForm","MainAppHOC","dispatch","useDispatch","weatherSelector","useSelector","useState","initialized","setInitialized","setWeather","bgGIF","setBgGif","useEffect","navigator","geolocation","getCurrentPosition","pos","coords","latitude","longitude","resp","data","cod","degree","parseInt","Math","ceil","main","temp","toFixed","country","sys","message","console","log","toLowerCase","index","random","length","Image","src","fluid","draggable","alt","formData","cityName","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e34e5013.chunk.js","sourcesContent":["import React from \"react\";\r\nimport store from \"../store/store\";\r\nimport {Provider} from \"react-redux\";\r\nimport {HashRouter} from \"react-router-dom\";\r\n\r\nexport const MainAppHOC = (Component: React.FC) => (props: any) => {\r\n    return (\r\n        <HashRouter>\r\n            <Provider store={store}>\r\n                <Component {...props}/>\r\n            </Provider>\r\n        </HashRouter>\r\n    )\r\n};","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import axios from \"axios\";\r\n\r\nconst apiKey: string = `0a494230a7296285ed456b380ec63553`;\r\nconst instance = axios.create({\r\n    baseURL: 'https://api.openweathermap.org/data/2.5/weather',\r\n    headers: {}\r\n});\r\n\r\nexport const API = {\r\n    GetWeatherByCity: async (city: string) => {\r\n        try {\r\n            return await instance.get(`?q=${city}&appid=${apiKey}`);\r\n        } catch (e) {\r\n            return e;\r\n        }\r\n    },\r\n    GetWeatherByPos: async (lat: number, lon: number) => {\r\n        try {\r\n            return await instance.get(`?lat=${lat}&lon=${lon}&appid=${apiKey}`);\r\n        } catch (e) {\r\n            return e;\r\n        }\r\n    }\r\n};","import {IAction, IState, IWeather} from \"./weather.interfaces\";\r\nimport {API} from \"../api/weather.api\";\r\n\r\nconst initialState: IState = {\r\n    weather: null,\r\n    error: null,\r\n};\r\n\r\nexport const WeatherReducer = (state: IState = initialState, action: IAction) => {\r\n    switch (action.type) {\r\n        case \"SET_WEATHER\":\r\n            return {\r\n                ...state,\r\n                weather: {...action.weather}\r\n            };\r\n        case \"SET_ERROR\":\r\n            return {\r\n                ...initialState,\r\n                error: action.msg,\r\n            };\r\n        default:\r\n            return {\r\n                ...state,\r\n            }\r\n    }\r\n};\r\n\r\nexport const AC = (type: string, obj: IWeather | null, msg: string | null) => {\r\n    switch (type) {\r\n        case \"SET_WEATHER\":\r\n            return {\r\n                type,\r\n                weather: {\r\n                    ...obj\r\n                }\r\n            };\r\n        case \"SET_ERROR\":\r\n            return {type, msg};\r\n        default:\r\n            return {}\r\n    }\r\n};\r\n\r\nexport const SetWeather = (city: string) => async (dispatch: any) => {\r\n    const resp = await API.GetWeatherByCity(city);\r\n    if (typeof resp !== \"string\" && resp.data) {\r\n        if (resp.data.cod !== 200) {\r\n            dispatch(AC(\"SET_ERROR\", null, resp.data.message));\r\n        } else {\r\n            const obj = {\r\n                city: resp.data.name,\r\n                degree: parseInt(Math.ceil(resp.data.main.temp - 273.15).toFixed(0)),\r\n                name: resp.data.weather[0].main,\r\n                country: resp.data.sys.country,\r\n            };\r\n            dispatch(AC(\"SET_WEATHER\", obj, null));\r\n        }\r\n    } else {\r\n        dispatch(AC(\"SET_ERROR\", null, \"City not found\"));\r\n    }\r\n};\r\n\r\nexport const SetWeatherByPos = (lat: number, lon: number) => async (dispatch: any) => {\r\n    const resp = await API.GetWeatherByPos(lat, lon);\r\n    if (typeof resp !== \"string\" && resp.data) {\r\n        if (resp.data.cod === 200) {\r\n            const obj = {\r\n                city: resp.data.name,\r\n                degree: parseInt(Math.ceil(resp.data.main.temp - 273.15).toFixed(0)),\r\n                name: resp.data.weather[0].main,\r\n                country: resp.data.sys.country,\r\n            };\r\n            dispatch(AC(\"SET_WEATHER\", obj, null));\r\n        } else {\r\n            dispatch(AC(\"SET_ERROR\", null, resp.data.message));\r\n        }\r\n    } else {\r\n        dispatch(AC(\"SET_ERROR\", null, \"server error\"));\r\n    }\r\n};","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport {reducer as formReducer} from \"redux-form\";\r\nimport {WeatherReducer} from \"./weather.reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    form: formReducer,\r\n    weather: WeatherReducer,\r\n});\r\n\r\n// @ts-ignore\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\nexport default store;\r\n","export default __webpack_public_path__ + \"static/media/MorningRain.b36af12a.gif\";","export default __webpack_public_path__ + \"static/media/NightRain.31d7ca51.gif\";","export default __webpack_public_path__ + \"static/media/Rain1.f9ea0cd0.gif\";","export default __webpack_public_path__ + \"static/media/Fog.1c17f57d.gif\";","export default __webpack_public_path__ + \"static/media/Fog1.9664d045.gif\";","export default __webpack_public_path__ + \"static/media/Fog2.4858f1f2.gif\";","import morningRain from '../assets/MorningRain.gif';\r\nimport nightRain from '../assets/NightRain.gif';\r\nimport Rain from '../assets/Rain1.gif';\r\nimport Fog from '../assets/Fog.gif';\r\nimport Fog1 from '../assets/Fog1.gif';\r\nimport Fog2 from '../assets/Fog2.gif';\r\nimport Snow from '../assets/Snow.gif';\r\nimport Snow2 from '../assets/Snow2.gif';\r\nimport Snow3 from '../assets/Snow3.gif';\r\nimport Cloudy from '../assets/Cloudy.gif';\r\nimport Cloudy1 from '../assets/Cloudy1.gif';\r\nimport ClearSky from '../assets/ClearSky.gif';\r\n\r\nconst fog: Array<any> = [Fog, Fog1, Fog2];\r\nconst mist: Array<any> = [Fog, Fog1, Fog2];\r\nconst rain: Array<any> = [Rain, morningRain, nightRain];\r\nconst snow: Array<any> = [Snow, Snow2, Snow3];\r\nconst clouds: Array<any> = [Cloudy, Cloudy1];\r\nconst clear: Array<any> = [ClearSky];\r\n\r\nexport const GIFs = {\r\n    fog,\r\n    rain,\r\n    snow,\r\n    mist,\r\n    clouds,\r\n    clear\r\n};\r\n","export default __webpack_public_path__ + \"static/media/Snow.86f55958.gif\";","export default __webpack_public_path__ + \"static/media/Snow2.16abfe11.gif\";","export default __webpack_public_path__ + \"static/media/Snow3.99d4365e.gif\";","export default __webpack_public_path__ + \"static/media/Cloudy.cf326fcc.gif\";","export default __webpack_public_path__ + \"static/media/Cloudy1.8175ab70.gif\";","export default __webpack_public_path__ + \"static/media/ClearSky.613bda1e.gif\";","import React from \"react\";\r\nimport {Field} from \"redux-form\";\r\nimport {Form, Button} from \"react-bootstrap\";\r\n\r\nconst Input: React.FC = (props: any) => <Form.Control type={\"text\"} {...props} {...props.input} />;\r\n\r\nconst SearchForm: React.FC = (props: any) => <Form className={\"mt-3 d-flex\"} onSubmit={props.handleSubmit}>\r\n    <Field\r\n        name={\"cityName\"}\r\n        type={\"text\"}\r\n        placeholder={\"City Name\"}\r\n        component={Input}\r\n        className={\"text-primary\"}\r\n    />\r\n    <Button className={\"ml-1 \"} type={\"submit\"}>GO</Button>\r\n</Form>;\r\n\r\nexport default SearchForm;","import React, {useEffect, useState} from \"react\";\r\nimport {MainAppHOC} from \"../hocs/MainAppHOC\";\r\nimport {GIFs} from '../utils/gifs';\r\nimport {Image} from \"react-bootstrap\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport SearchForm from \"./SearchForm\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {SetWeather, SetWeatherByPos} from \"../store/weather.reducer\";\r\nimport {IWeather} from \"../store/weather.interfaces\";\r\n\r\nconst SearchReduxForm = reduxForm({form: 'search'})(SearchForm);\r\n\r\nconst Main: React.FC = () => {\r\n    const dispatch = useDispatch();\r\n    // @ts-ignore\r\n    const weatherSelector = useSelector(state => state.weather);\r\n    const [initialized, setInitialized] = useState(false);\r\n    const [weather, setWeather] = useState<IWeather | null>(null);\r\n    const [bgGIF, setBgGif] = useState(\"\");\r\n    useEffect(() => {\r\n        if (navigator.geolocation) {\r\n            navigator.geolocation.getCurrentPosition((pos) => {\r\n                dispatch(SetWeatherByPos(pos.coords.latitude, pos.coords.longitude));\r\n                setInitialized(false);\r\n            });\r\n            setInitialized(true);\r\n        } else {\r\n            console.log(\"Your browser is not supported Geolocation\");\r\n        }\r\n        //eslint-disable-next-line\r\n    }, []);\r\n    useEffect(() => {\r\n        if (weatherSelector.weather) {\r\n            setWeather({...weatherSelector.weather});\r\n            const name = weatherSelector.weather.name.toLowerCase();\r\n            // @ts-ignore\r\n            const index = parseInt((Math.random() * (GIFs[name].length - 1)).toFixed(0));\r\n            // @ts-ignore\r\n            setBgGif(GIFs[name][index]);\r\n            setInitialized(true);\r\n        }\r\n    }, [weatherSelector.weather]);\r\n    const SFSubmit = (formData: any) => {\r\n        if (!formData.cityName) return null;\r\n        dispatch(SetWeather(formData.cityName));\r\n    };\r\n    if (!initialized) return <div\r\n        className={\"container d-flex justify-content-center align-items-center h-100\"}>Loading...</div>;\r\n    return <>\r\n        <div className={'background w-100 h-100 d-flex justify-content-center'}>\r\n            {initialized\r\n                ? <Image src={bgGIF} fluid draggable={\"false\"} alt={\"image\"}/>\r\n                : <div className={'loading bg-light'}/>\r\n            }\r\n        </div>\r\n        <div className={'container content d-flex flex-column justify-content-center align-items-center'}>\r\n            <h1 className={\"text-primary\"}>Quick Weather <i>Demo(ver 0.1)</i></h1>\r\n            <h3 className={\"text-primary\"}>Find out the weather of your city quickly</h3>\r\n            <SearchReduxForm onSubmit={SFSubmit}/>\r\n            {weather\r\n                ? <div className={\"city d-flex flex-column justify-content-center align-items-center mt-3\"}>\r\n                    <h1 className={\"text-primary\"}>{weather.city}/{weather.country}</h1>\r\n                    <h2 className={\"text-primary\"}>{weather.name}</h2>\r\n                    <h2 className={\"text-primary\"}>{weather.degree}&deg;C\r\n                        / {((weather.degree * 9 / 5) + 32).toFixed(0)}&deg;F</h2>\r\n                </div>\r\n                : weatherSelector.error\r\n                    ? <h2 className={\"text-danger mt-3\"}>{weatherSelector.error}</h2>\r\n                    : <h2 className={\"text-danger mt-3\"}>Enter city to find out the weather</h2>\r\n            }\r\n        </div>\r\n    </>\r\n};\r\n\r\nexport default MainAppHOC(Main);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport reportWebVitals from './reportWebVitals';\nimport Main from \"./components/main\";\nimport './index.sass';\n\nReactDOM.render(\n    <Main />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}